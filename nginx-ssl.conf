# Nginx config con SSL (Let's Encrypt) para producción
# Reemplaza tudominio.cl con tu dominio real

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name tudominio.cl www.tudominio.cl;
    
    # Certbot challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name tudominio.cl www.tudominio.cl;

    # SSL certificates (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/tudominio.cl/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tudominio.cl/privkey.pem;
    
    # SSL config moderna
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers off;
    
    # SSL session cache
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS (opcional, recomendado)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=()" always;
    add_header Cross-Origin-Opener-Policy "same-origin" always;
    add_header Cross-Origin-Resource-Policy "same-site" always;
    # Content Security Policy (ajústala si agregas otros CDNs)
    add_header Content-Security-Policy "default-src 'self'; img-src 'self' data: https:; script-src 'self' 'unsafe-inline' https://www.googletagmanager.com https://www.google-analytics.com; style-src 'self' 'unsafe-inline'; font-src 'self' data:; connect-src 'self' http://mision3d-backend:3000 http://localhost:3000 https://www.google-analytics.com; frame-ancestors 'self'; form-action 'self'" always;
    
    # Root para frontend estático
    root /var/www/html;
    index index.html;
    
    # Servir archivos estáticos del frontend
    location / {
        try_files $uri $uri/ =404;
    }
    
    # Proxy al backend (API)
    location /api/ {
        proxy_pass http://mision3d-backend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Flow endpoints (webhooks)
    location /flow/ {
        proxy_pass http://mision3d-backend:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Cache para assets estáticos
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|woff|woff2|ttf|eot)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }
    
    # Bloquear acceso a archivos sensibles
    location ~ /\. {
        deny all;
    }
    
    location /backend/ {
        deny all;
    }
    
    # Logs
    access_log /var/log/nginx/mision3d_access.log;
    error_log /var/log/nginx/mision3d_error.log;
}
